#BlueJ class context
comment0.target=ColdCSV
comment1.params=
comment1.target=void\ testColdestHourInMultipleFile()
comment10.params=parser
comment10.target=java.lang.Double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment11.params=
comment11.target=void\ testAverageTemperatureInFile()
comment12.params=parser\ value
comment12.target=java.lang.Double\ averageTemperatureWithHighHumidityFile(org.apache.commons.csv.CSVParser,\ int)
comment13.params=
comment13.target=void\ testAverageTemperatureHighHumidityFile()
comment2.params=parser
comment2.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment3.params=
comment3.target=void\ testColdestHourInFile()
comment4.params=smallestSoFar\ currentRow
comment4.target=org.apache.commons.csv.CSVRecord\ smallestBetween(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment5.params=smallestSoFar\ currentRow
comment5.target=org.apache.commons.csv.CSVRecord\ smallestHumid(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment6.params=
comment6.target=void\ fileWithColdestTemperature()
comment7.params=
comment7.target=void\ lowestHumidityInManyFile()
comment8.params=parser
comment8.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment9.params=
comment9.target=void\ testLowestHumidityInFile()
numComments=14
